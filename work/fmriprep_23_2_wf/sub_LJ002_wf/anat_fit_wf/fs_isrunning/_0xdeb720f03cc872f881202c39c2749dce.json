[('function_str', 'def fs_isRunning(subjects_dir, subject_id, mtime_tol=86400, logger=None):\n    """\n    Checks FreeSurfer subjects dir for presence of recon-all blocking ``IsRunning`` files,\n    and optionally removes any based on the modification time.\n\n    Parameters\n    ----------\n    subjects_dir : os.PathLike or None\n        Existing FreeSurfer subjects directory\n    subject_id : str\n        Subject label\n    mtime_tol : int\n        Tolerance time (in seconds) between current time and last modification of ``recon-all.log``\n\n    Returns\n    -------\n    subjects_dir : os.PathLike or None\n\n    """\n    from pathlib import Path\n    import time\n\n    if subjects_dir is None:\n        return subjects_dir\n    subj_dir = Path(subjects_dir) / subject_id\n    if not subj_dir.exists():\n        return subjects_dir\n\n    isrunning = tuple(subj_dir.glob("scripts/IsRunning*"))\n    if not isrunning:\n        return subjects_dir\n    reconlog = subj_dir / "scripts" / "recon-all.log"\n    # if recon log doesn\'t exist, just clear IsRunning\n    mtime = reconlog.stat().st_mtime if reconlog.exists() else 0\n    if (time.time() - mtime) < mtime_tol:\n        raise RuntimeError(\n            f"""\\\nThe FreeSurfer\'s subject folder <{subj_dir}> contains IsRunning files that \\\nmay pertain to a current or past execution: {isrunning}.\nFreeSurfer cannot run if these are present, to avoid interfering with a running \\\nprocess. Please, make sure no other process is running ``recon-all`` on this subject \\\nand proceed to delete the files listed above."""\n        )\n    for fl in isrunning:\n        fl.unlink()\n    if logger:\n        logger.warn(f\'Removed "IsRunning*" files found under {subj_dir}\')\n    return subjects_dir\n'), ('logger', <Logger nipype.workflow (INFO)>), ('subject_id', 'sub-LJ002'), ('subjects_dir', '/tmp/sourcedata/freesurfer'), ('needed_outputs', ['out'])]